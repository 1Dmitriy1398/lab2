#include <iostream>
#include <string.h>
using namespace std;
int pr(char** gg, char p);
void vds(char** gg);
int main()
{
	setlocale(LC_ALL, "Russian");
	char z[2] = " ", ll[2] = "o", zz[2] = "x"; char** g;
	int i, j; bool t1 = true, t2 = true;
	g = new char* [3];// динамический массив
	for (int i = 0; i < 3; i++)
	{
		g[i] = new char[3];
		for (int j = 0; j < 3; j++)
		{
			g[i][j] = z[0];// заполнение массива пробелами
		}
	}
	vds(g);
	while (t1)// проверка на остаток элементов массива
	{
		t1 = false;
		while (t2) // проверка на свободную клетку 
		{
			cout << "Сделай ход в свободную ячейку (строка и столбец) ";
			cout << "строка (0-2) "; cin >> i; cout << "столбец (0-2) "; cin >> j;
			if (g[i][j] == z[0]) { g[i][j] = zz[0]; t2 = false; }
		}
		t2 = true;
		if (pr(g, zz[0])== 1)
		{
			cout << "Победил игрок" << endl;
			vds(g);
			return 0;
		}
		for (int i = 0; i < 3; i++)
		{
			for (int j = 0; j < 3; j++)
			{
				if (g[i][j] == z[0]) // проверка на свободную клетку(бот)
				{
					g[i][j] = ll[0]; t1 = true; i = 10; j = 10;
				}
			}
		}
		if (pr(g, ll[0])== 1)
		{
			cout << "Победил бот" << endl;
			vds(g);
			return 0;
		}
		vds(g);
	}
	cout << "Ничья";
	return 0;
}
void vds(char** gg) // вывод массива
{

	cout << endl << gg[0][0] << "|" << gg[0][1] << "|" << gg[0][2] << endl;
	cout << "- - -" << endl;
	cout << gg[1][0] << "|" << gg[1][1] << "|" << gg[1][2] << endl;
	cout << "- - -" << endl;
	cout << gg[2][0] << "|" << gg[2][1] << "|" << gg[2][2] << endl;
}
int pr(char** gg,char p)
{
	if (gg[0][0] == p && gg[0][1] == p && gg[0][2] == p)  { return 1; }
		if (gg[1][0] == p && gg[1][1] == p && gg[1][2] == p) { return 1; }
		if (gg[2][0] == p && gg[2][1] == p && gg[2][2] == p)  { return 1; }
		if (gg[0][0] == p && gg[1][0] == p && gg[2][0] == p)  { return 1; }
		if (gg[0][1] == p && gg[1][1] == p && gg[2][1] == p)  { return 1; }
		if (gg[0][2] == p && gg[1][2] == p && gg[2][2] == p)  { return 1; }
		if (gg[0][0] == p && gg[1][1] == p && gg[2][2] == p)  { return 1; }
		if (gg[0][2] == p && gg[1][1] == p && gg[2][0] == p)  { return 1; }
		return 0;
}